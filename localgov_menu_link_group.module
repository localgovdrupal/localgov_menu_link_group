<?php

/**
 * @file
 * Hook implementations.
 */

declare(strict_types = 1);

use Drupal\localgov_menu_link_group\MenuLinkGrouper;
use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_menu_links_discovered_alter().
 *
 * The localgov_menu_link_group entities tell us which menu link should go under
 * which group.  For each group, we generate a menu link.  This menu link serves
 * as the parent menu link for all the child menu links attached to that entity.
 */
function localgov_menu_link_group_menu_links_discovered_alter(array &$menu_links) {

  $active_groups = Drupal::service('entity_type.manager')->getStorage('localgov_menu_link_group')->loadByProperties(['status' => 1]);

  $menu_link_grouper = new MenuLinkGrouper($menu_links);
  array_walk($active_groups, [$menu_link_grouper, 'groupChildMenuLinks']);
}

/**
 * Implements hook_ENTITY_TYPE_insert().
 *
 * Rebuild menu link cache when a new localgov_menu_link_group entity is added.
 */
function localgov_menu_link_group_localgov_menu_link_group_insert(EntityInterface $entity) {

  Drupal::service('plugin.manager.menu.link')->rebuild();
}

/**
 * Implements hook_ENTITY_TYPE_update().
 */
function localgov_menu_link_group_localgov_menu_link_group_update(EntityInterface $entity) {

  localgov_menu_link_group_localgov_menu_link_group_insert($entity);
}

/**
 * Implements hook_ENTITY_TYPE_update().
 */
function localgov_menu_link_group_localgov_menu_link_group_delete(EntityInterface $entity) {

  localgov_menu_link_group_localgov_menu_link_group_insert($entity);
}
